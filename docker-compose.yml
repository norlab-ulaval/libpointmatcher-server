services:
  web:
    build:
      context: ./web/libpointmatcher-server-interface
    ports:
      - "8000:8000"
    depends_on:
      api:
        condition: service_started
    networks:
      - internal
    environment:
      VITE_API_URI: "http://api:8080"

  test-api:
    build:
      context: ./api
      dockerfile: ./Dockerfile-test
    depends_on:
      mongo:
        condition: service_healthy
      cache:
        condition: service_started
    env_file:
      - .env
    networks:
      - internal
    environment:
      MONGO_URI: "mongo:27017"
      REDIS_URI: "cache"

  api:
   build:
     context: ./api
   ports:
     - "8080:80"
   depends_on:
     mongo:
       condition: service_healthy
     cache:
       condition: service_started
     test-api:
       condition: service_completed_successfully
   env_file:
     - .env
   networks:
     - internal
   environment:
     MONGO_URI: "mongo:27017"
     REDIS_URI: "cache"

  mongo:
    image: mongo
    ports:
      - "27017:27017"
    healthcheck:
      test: echo 'db.runCommand("ping").ok' | mongosh mongo:27017/test --quiet
      interval: 10s
      timeout: 10s
      retries: 5
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_USERNAME}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_PASSWORD}
      MONGO_INITDB_DATABASE: ${MONGO_DATABASE}
    networks:
      - internal

  mongo-express:
    image: mongo-express
    restart: always
    ports:
      - "8181:8081"
    depends_on:
      mongo:
        condition: service_healthy
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: ${MONGO_USERNAME}
      ME_CONFIG_MONGODB_ADMINPASSWORD: ${MONGO_PASSWORD}
      ME_CONFIG_MONGODB_URL: mongodb://${MONGO_PASSWORD}:${MONGO_PASSWORD}@mongo:27017/
    networks:
      - internal

  cache:
    image: redis:6.2-alpine
    restart: always
    ports:
      - '6379:6379'
    command: redis-server --save 20 1 --loglevel warning --requirepass potato123
    volumes:
      - cache:/data
    networks:
      - internal

  libpointmatcher:
    image: libpointmatcher
    command: 'evaluate_config_server.py --ws 8765 --config a --point-cloud a --output a --seed 1'
    ports:
      - '8765:8765'

networks:
  internal:

volumes:
  cache:
    driver: local